This file is a merged representation of the entire codebase, combined into a single document.
Generated by Repomix on: 2025-02-08T12:59:24.599Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
inventory/
  hosts.ini
playbooks/
  ssh_hardening.yml
.gitignore
ansible.cfg

================================================================
Files
================================================================

================
File: inventory/hosts.ini
================
[servers]
debian-docker ansible_host=192.168.3.100 ansible_user=sysadmin

================
File: playbooks/ssh_hardening.yml
================
---
- name: Configure SSH Security
  hosts: all
  become: true
  vars:
    ssh_public_keys:
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIKm8Whiz7KcGzArrMB9NPHyUsLckYv+jCVcLxPObJvk"
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOFhTNajU8kAGnJD8GWMsvM9GmU5iKmG375upAkhs0se"

  tasks:
    - name: Ensure SSH host key is known
      local_action: shell ssh-keyscan -H {{ ansible_host }} >> ~/.ssh/known_hosts
      changed_when: false

    - name: Ensure .ssh directory exists with correct permissions
      file:
        path: "/home/{{ ansible_user }}/.ssh"
        state: directory
        mode: "0700"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Add public keys to authorized_keys with correct permissions
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ item }}"
        mode: "0600"
      with_items: "{{ ssh_public_keys }}"

    - name: Ensure proper ownership of authorized_keys
      file:
        path: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0600"

    - name: Copy SSH key to remote hosts
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ item }}"
      with_items: "{{ ssh_public_keys }}"

    - name: Test key-based authentication
      local_action: shell ssh -o PasswordAuthentication=no -o BatchMode=yes {{ ansible_user }}@{{ ansible_host }} echo "SSH key auth successful"
      register: ssh_test
      ignore_errors: true
      changed_when: false

    - name: Fail if key authentication doesn't work
      fail:
        msg: |
          Cannot proceed - key-based authentication is not working.
          Please ensure at least one of your keys is already in authorized_keys.
          You can manually add a key with: ssh-copy-id -i /path/to/key {{ ansible_user }}@{{ ansible_host }}
      when: ssh_test.rc != 0

    - name: Create backup of SSH config
      copy:
        src: /etc/ssh/sshd_config
        dest: /etc/ssh/sshd_config.backup.{{ ansible_date_time.epoch }}
        remote_src: yes

    - name: Ensure .ssh directory exists
      file:
        path: "{{ item }}"
        state: directory
        mode: "0700"
      with_items:
        - "/root/.ssh"
        - "/home/{{ ansible_user }}/.ssh"

    - name: Add public keys to authorized_keys
      lineinfile:
        path: "{{ item[0] }}/authorized_keys"
        create: yes
        line: "{{ item[1] }}"
        mode: "0600"
      with_nested:
        - ["/root/.ssh", "/home/{{ ansible_user }}/.ssh"]
        - "{{ ssh_public_keys }}"

    - name: Update SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      with_items:
        - regexp: "^PasswordAuthentication"
          line: "PasswordAuthentication no"
        - regexp: "^ChallengeResponseAuthentication"
          line: "ChallengeResponseAuthentication no"
        - regexp: "^UsePAM"
          line: "UsePAM no"
        - regexp: "^PubkeyAuthentication"
          line: "PubkeyAuthentication yes"

    - name: Test SSH config file
      command: sshd -t
      changed_when: false

    - name: Restart SSH service
      service:
        name: sshd
        state: restarted

    - name: Wait for SSH to come back up
      wait_for:
        port: 22
        state: started
        timeout: 30
        delay: 5

    - name: Verify SSH still works
      local_action: shell ssh -o PasswordAuthentication=no -o BatchMode=yes {{ ansible_user }}@{{ ansible_host }} echo "SSH still working"
      register: final_test
      changed_when: false

    - name: Show success message
      debug:
        msg: |
          SSH hardening completed successfully!
          A backup of your original sshd_config is at /etc/ssh/sshd_config.backup.{{ ansible_date_time.epoch }}
      when: final_test.rc == 0

================
File: .gitignore
================
# Ansible runtime files
*.retry
*.pyc
__pycache__/
.ansible/

# SSH keys and secrets
*.pem
*.key
id_*
*.pub

# Environment variables and secrets
.env
vault.yml
*vault.yml
*.vault

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Editor/IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Logs
*.log
logs/

# Backup files
*.bak
*.backup
*~

# Custom inventory files that might contain sensitive data
inventory/custom*
inventory/production*

================
File: ansible.cfg
================
[defaults]
inventory = inventory/hosts.ini
host_key_checking = False

[ssh_connection]
pipelining = True



================================================================
End of Codebase
================================================================
